{
	"id": "d5db5b112765e712d4417fc5082eb1ef",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.16",
	"solcLongVersion": "0.8.16+commit.07a7930e",
	"input": {
		"language": "Solidity",
		"sources": {
			"QvToken/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./IERC20Metadata.sol\";\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\n \r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    // mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        // _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit mintAndburn(\"mint\",account, amount);\r\n\r\n        // _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n    \r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        // _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit mintAndburn(\"burn\",account, amount);\r\n\r\n        // _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    // function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n    //     address owner = _msgSender();\r\n    //     _transfer(owner, to, amount);\r\n    //     return true;\r\n    // }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n    //  */\r\n    // function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n    //     return _allowances[owner][spender];\r\n    // }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    // function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n    //     address owner = _msgSender();\r\n    //     _approve(owner, spender, amount);\r\n    //     return true;\r\n    // }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    // function transferFrom(\r\n    //     address from,\r\n    //     address to,\r\n    //     uint256 amount\r\n    // ) public virtual override returns (bool) {\r\n    //     address spender = _msgSender();\r\n    //     _spendAllowance(from, spender, amount);\r\n    //     _transfer(from, to, amount);\r\n    //     return true;\r\n    // }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    // function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n    //     address owner = _msgSender();\r\n    //     _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n    //     return true;\r\n    // }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    // function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n    //     address owner = _msgSender();\r\n    //     uint256 currentAllowance = allowance(owner, spender);\r\n    //     require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n    //     unchecked {\r\n    //         _approve(owner, spender, currentAllowance - subtractedValue);\r\n    //     }\r\n\r\n    //     return true;\r\n    // }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    // function _transfer(\r\n    //     address from,\r\n    //     address to,\r\n    //     uint256 amount\r\n    // ) internal virtual {\r\n    //     require(from != address(0), \"ERC20: transfer from the zero address\");\r\n    //     require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n    //     _beforeTokenTransfer(from, to, amount);\r\n\r\n    //     uint256 fromBalance = _balances[from];\r\n    //     require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n    //     unchecked {\r\n    //         _balances[from] = fromBalance - amount;\r\n    //     }\r\n    //     _balances[to] += amount;\r\n\r\n    //     emit Transfer(from, to, amount);\r\n\r\n    //     _afterTokenTransfer(from, to, amount);\r\n    // }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    // function _mint(address account, uint256 amount) internal virtual {\r\n    //     require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n    //     // _beforeTokenTransfer(address(0), account, amount);\r\n\r\n    //     _totalSupply += amount;\r\n    //     _balances[account] += amount;\r\n    //     emit mintAndburn(\"mint\",account, amount);\r\n\r\n    //     // _afterTokenTransfer(address(0), account, amount);\r\n    // }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n\r\n     \r\n    // function _burn(address account, uint256 amount) internal virtual {\r\n    //     require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n    //     // _beforeTokenTransfer(account, address(0), amount);\r\n\r\n    //     uint256 accountBalance = _balances[account];\r\n    //     require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n    //     unchecked {\r\n    //         _balances[account] = accountBalance - amount;\r\n    //     }\r\n    //     _totalSupply -= amount;\r\n\r\n    //     emit mintAndburn(\"burn\",account, amount);\r\n\r\n    //     // _afterTokenTransfer(account, address(0), amount);\r\n    // }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    // function _approve(\r\n    //     address owner,\r\n    //     address spender,\r\n    //     uint256 amount\r\n    // ) internal virtual {\r\n    //     require(owner != address(0), \"ERC20: approve from the zero address\");\r\n    //     require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n    //     _allowances[owner][spender] = amount;\r\n    //     emit Approval(owner, spender, amount);\r\n    // }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n    //  */\r\n    // function _spendAllowance(\r\n    //     address owner,\r\n    //     address spender,\r\n    //     uint256 amount\r\n    // ) internal virtual {\r\n    //     uint256 currentAllowance = allowance(owner, spender);\r\n    //     if (currentAllowance != type(uint256).max) {\r\n    //         require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n    //         unchecked {\r\n    //             _approve(owner, spender, currentAllowance - amount);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    // function _beforeTokenTransfer(\r\n    //     address from,\r\n    //     address to,\r\n    //     uint256 amount\r\n    // ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    // function _afterTokenTransfer(\r\n    //     address from,\r\n    //     address to,\r\n    //     uint256 amount\r\n    // ) internal virtual {}\r\n}\r\n"
			},
			"QvToken/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"QvToken/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"
			},
			"QvToken/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    // event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    // event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    event mintAndburn(string mintAndburn ,address account, uint256 amount);\r\n\r\n\r\n\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    // function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    // function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    // function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    // function transferFrom(\r\n    //     address from,\r\n    //     address to,\r\n    //     uint256 amount\r\n    // ) external returns (bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"QvToken/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"QvToken/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"QvToken/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"QvToken/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "mintAndburn",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintAndburn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"QvToken/ERC20.sol\":1419:14348  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"QvToken/ERC20.sol\":2016:2132  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"QvToken/ERC20.sol\":2091:2096  name_ */\n  dup2\n    /* \"QvToken/ERC20.sol\":2083:2088  _name */\n  0x02\n    /* \"QvToken/ERC20.sol\":2083:2096  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"QvToken/ERC20.sol\":2117:2124  symbol_ */\n  dup1\n    /* \"QvToken/ERC20.sol\":2107:2114  _symbol */\n  0x03\n    /* \"QvToken/ERC20.sol\":2107:2124  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"QvToken/ERC20.sol\":2016:2132  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"QvToken/ERC20.sol\":1419:14348  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"QvToken/ERC20.sol\":1419:14348  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"QvToken/ERC20.sol\":1419:14348  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"QvToken/ERC20.sol\":2202:2302  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"QvToken/ERC20.sol\":3322:3430  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"QvToken/ERC20.sol\":3164:3257  function decimals() public view virtual override returns (uint8) {... */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"QvToken/ERC20.sol\":3493:3620  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_6:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"QvToken/ERC20.sol\":2421:2525  function symbol() public view virtual override returns (string memory) {... */\n    tag_7:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"QvToken/ERC20.sol\":2202:2302  function name() public view virtual override returns (string memory) {... */\n    tag_9:\n        /* \"QvToken/ERC20.sol\":2256:2269  string memory */\n      0x60\n        /* \"QvToken/ERC20.sol\":2289:2294  _name */\n      0x02\n        /* \"QvToken/ERC20.sol\":2282:2294  return _name */\n      dup1\n      sload\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_31\n      swap1\n      tag_30\n      jump\t// in\n    tag_31:\n      dup1\n      iszero\n      tag_32\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_33\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_32)\n    tag_33:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_34:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_34\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_32:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"QvToken/ERC20.sol\":2202:2302  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"QvToken/ERC20.sol\":3322:3430  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_13:\n        /* \"QvToken/ERC20.sol\":3383:3390  uint256 */\n      0x00\n        /* \"QvToken/ERC20.sol\":3410:3422  _totalSupply */\n      sload(0x01)\n        /* \"QvToken/ERC20.sol\":3403:3422  return _totalSupply */\n      swap1\n      pop\n        /* \"QvToken/ERC20.sol\":3322:3430  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"QvToken/ERC20.sol\":3164:3257  function decimals() public view virtual override returns (uint8) {... */\n    tag_17:\n        /* \"QvToken/ERC20.sol\":3222:3227  uint8 */\n      0x00\n        /* \"QvToken/ERC20.sol\":3247:3249  18 */\n      0x12\n        /* \"QvToken/ERC20.sol\":3240:3249  return 18 */\n      swap1\n      pop\n        /* \"QvToken/ERC20.sol\":3164:3257  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"QvToken/ERC20.sol\":3493:3620  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_23:\n        /* \"QvToken/ERC20.sol\":3567:3574  uint256 */\n      0x00\n        /* \"QvToken/ERC20.sol\":3594:3603  _balances */\n      dup1\n        /* \"QvToken/ERC20.sol\":3594:3612  _balances[account] */\n      0x00\n        /* \"QvToken/ERC20.sol\":3604:3611  account */\n      dup4\n        /* \"QvToken/ERC20.sol\":3594:3612  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"QvToken/ERC20.sol\":3587:3612  return _balances[account] */\n      swap1\n      pop\n        /* \"QvToken/ERC20.sol\":3493:3620  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"QvToken/ERC20.sol\":2421:2525  function symbol() public view virtual override returns (string memory) {... */\n    tag_26:\n        /* \"QvToken/ERC20.sol\":2477:2490  string memory */\n      0x60\n        /* \"QvToken/ERC20.sol\":2510:2517  _symbol */\n      0x03\n        /* \"QvToken/ERC20.sol\":2503:2517  return _symbol */\n      dup1\n      sload\n      tag_39\n      swap1\n      tag_30\n      jump\t// in\n    tag_39:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_40\n      swap1\n      tag_30\n      jump\t// in\n    tag_40:\n      dup1\n      iszero\n      tag_41\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_42\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_41)\n    tag_42:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_43:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_43\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"QvToken/ERC20.sol\":2421:2525  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_44:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_45:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_46:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_65:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_65)\n    tag_67:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_47:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_48:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_70\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_44\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":818:889   */\n      tag_71\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_45\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_72\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_46\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":988:1017   */\n      tag_73\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_47\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_11:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_75\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_48\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1349:1426   */\n    tag_49:\n        /* \"#utility.yul\":1386:1393   */\n      0x00\n        /* \"#utility.yul\":1415:1420   */\n      dup2\n        /* \"#utility.yul\":1404:1420   */\n      swap1\n      pop\n        /* \"#utility.yul\":1349:1426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1432:1550   */\n    tag_50:\n        /* \"#utility.yul\":1519:1543   */\n      tag_78\n        /* \"#utility.yul\":1537:1542   */\n      dup2\n        /* \"#utility.yul\":1519:1543   */\n      tag_49\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1514:1517   */\n      dup3\n        /* \"#utility.yul\":1507:1544   */\n      mstore\n        /* \"#utility.yul\":1432:1550   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1556:1778   */\n    tag_15:\n        /* \"#utility.yul\":1649:1653   */\n      0x00\n        /* \"#utility.yul\":1687:1689   */\n      0x20\n        /* \"#utility.yul\":1676:1685   */\n      dup3\n        /* \"#utility.yul\":1672:1690   */\n      add\n        /* \"#utility.yul\":1664:1690   */\n      swap1\n      pop\n        /* \"#utility.yul\":1700:1771   */\n      tag_80\n        /* \"#utility.yul\":1768:1769   */\n      0x00\n        /* \"#utility.yul\":1757:1766   */\n      dup4\n        /* \"#utility.yul\":1753:1770   */\n      add\n        /* \"#utility.yul\":1744:1750   */\n      dup5\n        /* \"#utility.yul\":1700:1771   */\n      tag_50\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1556:1778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1784:1870   */\n    tag_51:\n        /* \"#utility.yul\":1819:1826   */\n      0x00\n        /* \"#utility.yul\":1859:1863   */\n      0xff\n        /* \"#utility.yul\":1852:1857   */\n      dup3\n        /* \"#utility.yul\":1848:1864   */\n      and\n        /* \"#utility.yul\":1837:1864   */\n      swap1\n      pop\n        /* \"#utility.yul\":1784:1870   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1876:1988   */\n    tag_52:\n        /* \"#utility.yul\":1959:1981   */\n      tag_83\n        /* \"#utility.yul\":1975:1980   */\n      dup2\n        /* \"#utility.yul\":1959:1981   */\n      tag_51\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1954:1957   */\n      dup3\n        /* \"#utility.yul\":1947:1982   */\n      mstore\n        /* \"#utility.yul\":1876:1988   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1994:2208   */\n    tag_19:\n        /* \"#utility.yul\":2083:2087   */\n      0x00\n        /* \"#utility.yul\":2121:2123   */\n      0x20\n        /* \"#utility.yul\":2110:2119   */\n      dup3\n        /* \"#utility.yul\":2106:2124   */\n      add\n        /* \"#utility.yul\":2098:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":2134:2201   */\n      tag_85\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2187:2196   */\n      dup4\n        /* \"#utility.yul\":2183:2200   */\n      add\n        /* \"#utility.yul\":2174:2180   */\n      dup5\n        /* \"#utility.yul\":2134:2201   */\n      tag_52\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1994:2208   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2295:2412   */\n    tag_54:\n        /* \"#utility.yul\":2404:2405   */\n      0x00\n        /* \"#utility.yul\":2401:2402   */\n      dup1\n        /* \"#utility.yul\":2394:2406   */\n      revert\n        /* \"#utility.yul\":2541:2667   */\n    tag_56:\n        /* \"#utility.yul\":2578:2585   */\n      0x00\n        /* \"#utility.yul\":2618:2660   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2611:2616   */\n      dup3\n        /* \"#utility.yul\":2607:2661   */\n      and\n        /* \"#utility.yul\":2596:2661   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2673:2769   */\n    tag_57:\n        /* \"#utility.yul\":2710:2717   */\n      0x00\n        /* \"#utility.yul\":2739:2763   */\n      tag_91\n        /* \"#utility.yul\":2757:2762   */\n      dup3\n        /* \"#utility.yul\":2739:2763   */\n      tag_56\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2728:2763   */\n      swap1\n      pop\n        /* \"#utility.yul\":2673:2769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2775:2897   */\n    tag_58:\n        /* \"#utility.yul\":2848:2872   */\n      tag_93\n        /* \"#utility.yul\":2866:2871   */\n      dup2\n        /* \"#utility.yul\":2848:2872   */\n      tag_57\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2841:2846   */\n      dup2\n        /* \"#utility.yul\":2838:2873   */\n      eq\n        /* \"#utility.yul\":2828:2891   */\n      tag_94\n      jumpi\n        /* \"#utility.yul\":2887:2888   */\n      0x00\n        /* \"#utility.yul\":2884:2885   */\n      dup1\n        /* \"#utility.yul\":2877:2889   */\n      revert\n        /* \"#utility.yul\":2828:2891   */\n    tag_94:\n        /* \"#utility.yul\":2775:2897   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2903:3042   */\n    tag_59:\n        /* \"#utility.yul\":2949:2954   */\n      0x00\n        /* \"#utility.yul\":2987:2993   */\n      dup2\n        /* \"#utility.yul\":2974:2994   */\n      calldataload\n        /* \"#utility.yul\":2965:2994   */\n      swap1\n      pop\n        /* \"#utility.yul\":3003:3036   */\n      tag_96\n        /* \"#utility.yul\":3030:3035   */\n      dup2\n        /* \"#utility.yul\":3003:3036   */\n      tag_58\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2903:3042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3048:3377   */\n    tag_22:\n        /* \"#utility.yul\":3107:3113   */\n      0x00\n        /* \"#utility.yul\":3156:3158   */\n      0x20\n        /* \"#utility.yul\":3144:3153   */\n      dup3\n        /* \"#utility.yul\":3135:3142   */\n      dup5\n        /* \"#utility.yul\":3131:3154   */\n      sub\n        /* \"#utility.yul\":3127:3159   */\n      slt\n        /* \"#utility.yul\":3124:3243   */\n      iszero\n      tag_98\n      jumpi\n        /* \"#utility.yul\":3162:3241   */\n      tag_99\n      tag_54\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3124:3243   */\n    tag_98:\n        /* \"#utility.yul\":3282:3283   */\n      0x00\n        /* \"#utility.yul\":3307:3360   */\n      tag_100\n        /* \"#utility.yul\":3352:3359   */\n      dup5\n        /* \"#utility.yul\":3343:3349   */\n      dup3\n        /* \"#utility.yul\":3332:3341   */\n      dup6\n        /* \"#utility.yul\":3328:3350   */\n      add\n        /* \"#utility.yul\":3307:3360   */\n      tag_59\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3297:3360   */\n      swap2\n      pop\n        /* \"#utility.yul\":3253:3370   */\n      pop\n        /* \"#utility.yul\":3048:3377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3383:3563   */\n    tag_60:\n        /* \"#utility.yul\":3431:3508   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3428:3429   */\n      0x00\n        /* \"#utility.yul\":3421:3509   */\n      mstore\n        /* \"#utility.yul\":3528:3532   */\n      0x22\n        /* \"#utility.yul\":3525:3526   */\n      0x04\n        /* \"#utility.yul\":3518:3533   */\n      mstore\n        /* \"#utility.yul\":3552:3556   */\n      0x24\n        /* \"#utility.yul\":3549:3550   */\n      0x00\n        /* \"#utility.yul\":3542:3557   */\n      revert\n        /* \"#utility.yul\":3569:3889   */\n    tag_30:\n        /* \"#utility.yul\":3613:3619   */\n      0x00\n        /* \"#utility.yul\":3650:3651   */\n      0x02\n        /* \"#utility.yul\":3644:3648   */\n      dup3\n        /* \"#utility.yul\":3640:3652   */\n      div\n        /* \"#utility.yul\":3630:3652   */\n      swap1\n      pop\n        /* \"#utility.yul\":3697:3698   */\n      0x01\n        /* \"#utility.yul\":3691:3695   */\n      dup3\n        /* \"#utility.yul\":3687:3699   */\n      and\n        /* \"#utility.yul\":3718:3736   */\n      dup1\n        /* \"#utility.yul\":3708:3789   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":3774:3778   */\n      0x7f\n        /* \"#utility.yul\":3766:3772   */\n      dup3\n        /* \"#utility.yul\":3762:3779   */\n      and\n        /* \"#utility.yul\":3752:3779   */\n      swap2\n      pop\n        /* \"#utility.yul\":3708:3789   */\n    tag_103:\n        /* \"#utility.yul\":3836:3838   */\n      0x20\n        /* \"#utility.yul\":3828:3834   */\n      dup3\n        /* \"#utility.yul\":3825:3839   */\n      lt\n        /* \"#utility.yul\":3805:3823   */\n      dup2\n        /* \"#utility.yul\":3802:3840   */\n      sub\n        /* \"#utility.yul\":3799:3883   */\n      tag_104\n      jumpi\n        /* \"#utility.yul\":3855:3873   */\n      tag_105\n      tag_60\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3799:3883   */\n    tag_104:\n        /* \"#utility.yul\":3620:3889   */\n      pop\n        /* \"#utility.yul\":3569:3889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208975dfc8bcd14b6bcd3d86055d232cd614710d49f21ef2478aef1fd9cb491d1164736f6c63430008100033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_60": {
									"entryPoint": null,
									"id": 60,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:4",
														"type": ""
													}
												],
												"src": "580:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:4"
															},
															"nodeType": "YulIf",
															"src": "1030:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:4",
														"type": ""
													}
												],
												"src": "874:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:4",
														"type": ""
													}
												],
												"src": "1161:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:4"
															},
															"nodeType": "YulIf",
															"src": "1434:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:4",
														"type": ""
													}
												],
												"src": "1296:308:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:4",
																"statements": []
															},
															"src": "1701:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:4",
														"type": ""
													}
												],
												"src": "1610:246:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:4"
															},
															"nodeType": "YulIf",
															"src": "2117:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:4",
														"type": ""
													}
												],
												"src": "1862:434:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:4"
															},
															"nodeType": "YulIf",
															"src": "2399:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:4",
														"type": ""
													}
												],
												"src": "2316:355:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:4"
															},
															"nodeType": "YulIf",
															"src": "2801:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:4",
														"type": ""
													}
												],
												"src": "2677:853:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:4",
														"type": ""
													}
												],
												"src": "3536:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:4"
															},
															"nodeType": "YulIf",
															"src": "3966:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:4"
															},
															"nodeType": "YulIf",
															"src": "4057:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:4",
														"type": ""
													}
												],
												"src": "3827:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:4",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:4",
														"type": ""
													}
												],
												"src": "4153:141:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:4"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:4",
														"type": ""
													}
												],
												"src": "4300:93:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:4"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:4"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:4",
														"type": ""
													}
												],
												"src": "4399:107:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:4",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:4"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:4"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:4"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:4"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:4"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:4"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:4",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:4",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:4",
														"type": ""
													}
												],
												"src": "4512:393:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:4",
														"type": ""
													}
												],
												"src": "4911:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:4",
														"type": ""
													}
												],
												"src": "4994:60:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:4",
														"type": ""
													}
												],
												"src": "5060:142:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:4"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:4",
														"type": ""
													}
												],
												"src": "5208:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:4",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:4"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:4"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:4"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:4"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:4"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:4"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:4",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:4",
														"type": ""
													}
												],
												"src": "5289:269:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:4",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:4"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:4",
														"type": ""
													}
												],
												"src": "5564:73:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:4"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:4"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:4"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:4"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:4"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:4",
														"type": ""
													}
												],
												"src": "5643:189:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:4"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:4",
																"statements": []
															},
															"src": "5898:120:4"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:4",
														"type": ""
													}
												],
												"src": "5838:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:4"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:4"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:4"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:4",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:4"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:4"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:4"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:4"
															},
															"nodeType": "YulIf",
															"src": "6120:446:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:4",
														"type": ""
													}
												],
												"src": "6030:543:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:4"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:4"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:4",
														"type": ""
													}
												],
												"src": "6579:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:4",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:4"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:4"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:4"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:4"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:4"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:4",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:4",
														"type": ""
													}
												],
												"src": "6702:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:4"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:4"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:4",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:4",
														"type": ""
													}
												],
												"src": "6876:295:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:4"
															},
															"nodeType": "YulIf",
															"src": "7381:56:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:4"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:4"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:4"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:4"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:4"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:4",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:4",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:4"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:4"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:4",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:4"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:4"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:4",
																					"statements": []
																				},
																				"src": "7867:208:4"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:4",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:4"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:4",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:4"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:4"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:4"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:4"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:4"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:4",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:4"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:4",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:4",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:4"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:4"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:4"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:4"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:4",
														"type": ""
													}
												],
												"src": "7176:1395:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000a8338038062000a838339818101604052810190620000379190620001f6565b8160029081620000489190620004c6565b5080600390816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b6104c680620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806306fdde031461005c57806318160ddd1461007a578063313ce5671461009857806370a08231146100b657806395d89b41146100e6575b600080fd5b610064610104565b6040516100719190610313565b60405180910390f35b610082610196565b60405161008f919061034e565b60405180910390f35b6100a06101a0565b6040516100ad9190610385565b60405180910390f35b6100d060048036038101906100cb9190610403565b6101a9565b6040516100dd919061034e565b60405180910390f35b6100ee6101f1565b6040516100fb9190610313565b60405180910390f35b6060600280546101139061045f565b80601f016020809104026020016040519081016040528092919081815260200182805461013f9061045f565b801561018c5780601f106101615761010080835404028352916020019161018c565b820191906000526020600020905b81548152906001019060200180831161016f57829003601f168201915b5050505050905090565b6000600154905090565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600380546102009061045f565b80601f016020809104026020016040519081016040528092919081815260200182805461022c9061045f565b80156102795780601f1061024e57610100808354040283529160200191610279565b820191906000526020600020905b81548152906001019060200180831161025c57829003601f168201915b5050505050905090565b600081519050919050565b600082825260208201905092915050565b60005b838110156102bd5780820151818401526020810190506102a2565b60008484015250505050565b6000601f19601f8301169050919050565b60006102e582610283565b6102ef818561028e565b93506102ff81856020860161029f565b610308816102c9565b840191505092915050565b6000602082019050818103600083015261032d81846102da565b905092915050565b6000819050919050565b61034881610335565b82525050565b6000602082019050610363600083018461033f565b92915050565b600060ff82169050919050565b61037f81610369565b82525050565b600060208201905061039a6000830184610376565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103d0826103a5565b9050919050565b6103e0816103c5565b81146103eb57600080fd5b50565b6000813590506103fd816103d7565b92915050565b600060208284031215610419576104186103a0565b5b6000610427848285016103ee565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061047757607f821691505b60208210810361048a57610489610430565b5b5091905056fea26469706673582212208975dfc8bcd14b6bcd3d86055d232cd614710d49f21ef2478aef1fd9cb491d1164736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xA83 CODESIZE SUB DUP1 PUSH3 0xA83 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4C6 DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xE6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x113 SWAP1 PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13F SWAP1 PUSH2 0x45F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x161 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x200 SWAP1 PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22C SWAP1 PUSH2 0x45F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x279 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x24E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x279 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E5 DUP3 PUSH2 0x283 JUMP JUMPDEST PUSH2 0x2EF DUP2 DUP6 PUSH2 0x28E JUMP JUMPDEST SWAP4 POP PUSH2 0x2FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29F JUMP JUMPDEST PUSH2 0x308 DUP2 PUSH2 0x2C9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32D DUP2 DUP5 PUSH2 0x2DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x348 DUP2 PUSH2 0x335 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x363 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37F DUP2 PUSH2 0x369 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x376 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D0 DUP3 PUSH2 0x3A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E0 DUP2 PUSH2 0x3C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3FD DUP2 PUSH2 0x3D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x419 JUMPI PUSH2 0x418 PUSH2 0x3A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x427 DUP5 DUP3 DUP6 ADD PUSH2 0x3EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x477 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x48A JUMPI PUSH2 0x489 PUSH2 0x430 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 PUSH22 0xDFC8BCD14B6BCD3D86055D232CD614710D49F21EF247 DUP11 0xEF 0x1F 0xD9 0xCB 0x49 SAR GT PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "1419:12929:1:-:0;;;2016:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2091:5;2083;:13;;;;;;:::i;:::-;;2117:7;2107;:17;;;;;;:::i;:::-;;2016:116;;1419:12929;;7:75:4;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;1419:12929:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@balanceOf_114": {
									"entryPoint": 425,
									"id": 114,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_90": {
									"entryPoint": 416,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_70": {
									"entryPoint": 260,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_80": {
									"entryPoint": 497,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_100": {
									"entryPoint": 406,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 873,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 671,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1072,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3892:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:4",
														"type": ""
													}
												],
												"src": "7:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:4",
														"type": ""
													}
												],
												"src": "112:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:4",
																"statements": []
															},
															"src": "378:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:4",
														"type": ""
													}
												],
												"src": "287:246:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:4",
														"type": ""
													}
												],
												"src": "539:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:4",
														"type": ""
													}
												],
												"src": "647:377:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:4",
														"type": ""
													}
												],
												"src": "1030:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1415:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1404:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1376:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1386:7:4",
														"type": ""
													}
												],
												"src": "1349:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1497:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1514:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1537:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1519:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1519:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1507:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1507:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1485:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1492:3:4",
														"type": ""
													}
												],
												"src": "1432:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1664:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1676:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1687:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1672:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1672:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1664:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1744:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1757:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1768:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1753:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1753:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1700:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1700:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1700:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1626:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1638:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1649:4:4",
														"type": ""
													}
												],
												"src": "1556:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1827:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1837:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1852:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1859:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1848:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1848:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1837:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1809:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1819:7:4",
														"type": ""
													}
												],
												"src": "1784:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1937:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1954:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1975:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "1959:15:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1959:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1947:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1947:35:4"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1925:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1932:3:4",
														"type": ""
													}
												],
												"src": "1876:112:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2088:120:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2098:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2110:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2121:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2106:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2106:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2098:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2174:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2187:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2198:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2134:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2134:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2134:67:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2060:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2072:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2083:4:4",
														"type": ""
													}
												],
												"src": "1994:214:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2254:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2264:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2280:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2274:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2264:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2247:6:4",
														"type": ""
													}
												],
												"src": "2214:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2384:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2401:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2404:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2394:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2394:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2394:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2295:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2507:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2524:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2527:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2517:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2418:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2586:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2596:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2611:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2618:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2607:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2607:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2596:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2568:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2578:7:4",
														"type": ""
													}
												],
												"src": "2541:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2718:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2728:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2757:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2739:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2739:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2728:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2700:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2710:7:4",
														"type": ""
													}
												],
												"src": "2673:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2818:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2875:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2884:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2887:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2877:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2877:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2877:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2841:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2866:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2848:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2848:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2838:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2838:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2831:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2831:43:4"
															},
															"nodeType": "YulIf",
															"src": "2828:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2811:5:4",
														"type": ""
													}
												],
												"src": "2775:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2955:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2965:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2987:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2974:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2974:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2965:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3030:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3003:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3003:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3003:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2933:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2941:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2949:5:4",
														"type": ""
													}
												],
												"src": "2903:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3114:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3160:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3162:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3162:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3162:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3135:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3144:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3131:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3131:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3156:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3127:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3127:32:4"
															},
															"nodeType": "YulIf",
															"src": "3124:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "3253:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3268:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3282:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3272:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3297:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3332:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3343:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3328:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3328:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3352:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3307:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3307:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3297:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3084:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3095:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3107:6:4",
														"type": ""
													}
												],
												"src": "3048:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3411:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3428:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3431:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3421:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3421:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3421:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3525:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3528:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3518:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3518:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3518:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3549:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3552:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3542:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3542:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3542:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3383:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3620:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3630:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3644:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3650:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3640:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3630:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3661:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3691:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3697:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3687:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3687:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3665:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3738:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3752:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3766:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3774:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3762:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3762:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3752:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3718:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3711:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3711:26:4"
															},
															"nodeType": "YulIf",
															"src": "3708:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3841:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "3855:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3855:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3855:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3805:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3828:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3836:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3825:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3825:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3802:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3802:38:4"
															},
															"nodeType": "YulIf",
															"src": "3799:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3604:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3613:6:4",
														"type": ""
													}
												],
												"src": "3569:320:4"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806306fdde031461005c57806318160ddd1461007a578063313ce5671461009857806370a08231146100b657806395d89b41146100e6575b600080fd5b610064610104565b6040516100719190610313565b60405180910390f35b610082610196565b60405161008f919061034e565b60405180910390f35b6100a06101a0565b6040516100ad9190610385565b60405180910390f35b6100d060048036038101906100cb9190610403565b6101a9565b6040516100dd919061034e565b60405180910390f35b6100ee6101f1565b6040516100fb9190610313565b60405180910390f35b6060600280546101139061045f565b80601f016020809104026020016040519081016040528092919081815260200182805461013f9061045f565b801561018c5780601f106101615761010080835404028352916020019161018c565b820191906000526020600020905b81548152906001019060200180831161016f57829003601f168201915b5050505050905090565b6000600154905090565b60006012905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600380546102009061045f565b80601f016020809104026020016040519081016040528092919081815260200182805461022c9061045f565b80156102795780601f1061024e57610100808354040283529160200191610279565b820191906000526020600020905b81548152906001019060200180831161025c57829003601f168201915b5050505050905090565b600081519050919050565b600082825260208201905092915050565b60005b838110156102bd5780820151818401526020810190506102a2565b60008484015250505050565b6000601f19601f8301169050919050565b60006102e582610283565b6102ef818561028e565b93506102ff81856020860161029f565b610308816102c9565b840191505092915050565b6000602082019050818103600083015261032d81846102da565b905092915050565b6000819050919050565b61034881610335565b82525050565b6000602082019050610363600083018461033f565b92915050565b600060ff82169050919050565b61037f81610369565b82525050565b600060208201905061039a6000830184610376565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103d0826103a5565b9050919050565b6103e0816103c5565b81146103eb57600080fd5b50565b6000813590506103fd816103d7565b92915050565b600060208284031215610419576104186103a0565b5b6000610427848285016103ee565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061047757607f821691505b60208210810361048a57610489610430565b5b5091905056fea26469706673582212208975dfc8bcd14b6bcd3d86055d232cd614710d49f21ef2478aef1fd9cb491d1164736f6c63430008100033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xE6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x104 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8F SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA0 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x403 JUMP JUMPDEST PUSH2 0x1A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x34E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x1F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x313 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x113 SWAP1 PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13F SWAP1 PUSH2 0x45F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x18C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x161 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x18C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x200 SWAP1 PUSH2 0x45F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x22C SWAP1 PUSH2 0x45F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x279 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x24E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x279 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x25C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2BD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2A2 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E5 DUP3 PUSH2 0x283 JUMP JUMPDEST PUSH2 0x2EF DUP2 DUP6 PUSH2 0x28E JUMP JUMPDEST SWAP4 POP PUSH2 0x2FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x29F JUMP JUMPDEST PUSH2 0x308 DUP2 PUSH2 0x2C9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x32D DUP2 DUP5 PUSH2 0x2DA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x348 DUP2 PUSH2 0x335 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x363 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x33F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37F DUP2 PUSH2 0x369 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x376 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D0 DUP3 PUSH2 0x3A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E0 DUP2 PUSH2 0x3C5 JUMP JUMPDEST DUP2 EQ PUSH2 0x3EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3FD DUP2 PUSH2 0x3D7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x419 JUMPI PUSH2 0x418 PUSH2 0x3A0 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x427 DUP5 DUP3 DUP6 ADD PUSH2 0x3EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x477 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x48A JUMPI PUSH2 0x489 PUSH2 0x430 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 PUSH22 0xDFC8BCD14B6BCD3D86055D232CD614710D49F21EF247 DUP11 0xEF 0x1F 0xD9 0xCB 0x49 SAR GT PUSH5 0x736F6C6343 STOP ADDMOD LT STOP CALLER ",
							"sourceMap": "1419:12929:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2202:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3164:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3493:127;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2421:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2202:100;2256:13;2289:5;2282:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2202:100;:::o;3322:108::-;3383:7;3410:12;;3403:19;;3322:108;:::o;3164:93::-;3222:5;3247:2;3240:9;;3164:93;:::o;3493:127::-;3567:7;3594:9;:18;3604:7;3594:18;;;;;;;;;;;;;;;;3587:25;;3493:127;;;:::o;2421:104::-;2477:13;2510:7;2503:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2421:104;:::o;7:99:4:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:77::-;1386:7;1415:5;1404:16;;1349:77;;;:::o;1432:118::-;1519:24;1537:5;1519:24;:::i;:::-;1514:3;1507:37;1432:118;;:::o;1556:222::-;1649:4;1687:2;1676:9;1672:18;1664:26;;1700:71;1768:1;1757:9;1753:17;1744:6;1700:71;:::i;:::-;1556:222;;;;:::o;1784:86::-;1819:7;1859:4;1852:5;1848:16;1837:27;;1784:86;;;:::o;1876:112::-;1959:22;1975:5;1959:22;:::i;:::-;1954:3;1947:35;1876:112;;:::o;1994:214::-;2083:4;2121:2;2110:9;2106:18;2098:26;;2134:67;2198:1;2187:9;2183:17;2174:6;2134:67;:::i;:::-;1994:214;;;;:::o;2295:117::-;2404:1;2401;2394:12;2541:126;2578:7;2618:42;2611:5;2607:54;2596:65;;2541:126;;;:::o;2673:96::-;2710:7;2739:24;2757:5;2739:24;:::i;:::-;2728:35;;2673:96;;;:::o;2775:122::-;2848:24;2866:5;2848:24;:::i;:::-;2841:5;2838:35;2828:63;;2887:1;2884;2877:12;2828:63;2775:122;:::o;2903:139::-;2949:5;2987:6;2974:20;2965:29;;3003:33;3030:5;3003:33;:::i;:::-;2903:139;;;;:::o;3048:329::-;3107:6;3156:2;3144:9;3135:7;3131:23;3127:32;3124:119;;;3162:79;;:::i;:::-;3124:119;3282:1;3307:53;3352:7;3343:6;3332:9;3328:22;3307:53;:::i;:::-;3297:63;;3253:117;3048:329;;;;:::o;3383:180::-;3431:77;3428:1;3421:88;3528:4;3525:1;3518:15;3552:4;3549:1;3542:15;3569:320;3613:6;3650:1;3644:4;3640:12;3630:22;;3697:1;3691:4;3687:12;3718:18;3708:81;;3774:4;3766:6;3762:17;3752:27;;3708:81;3836:2;3828:6;3825:14;3805:18;3802:38;3799:84;;3855:18;;:::i;:::-;3799:84;3620:269;3569:320;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "244400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address)": "2885",
								"decimals()": "365",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2437"
							},
							"internal": {
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1419,
									"end": 14348,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1419,
									"end": 14348,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1419,
									"end": 14348,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2016,
									"end": 2132,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2091,
									"end": 2096,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2083,
									"end": 2088,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2083,
									"end": 2096,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2083,
									"end": 2096,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2083,
									"end": 2096,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2083,
									"end": 2096,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2083,
									"end": 2096,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2083,
									"end": 2096,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2083,
									"end": 2096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2083,
									"end": 2096,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2083,
									"end": 2096,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2083,
									"end": 2096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2124,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2107,
									"end": 2114,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2107,
									"end": 2124,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2107,
									"end": 2124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2107,
									"end": 2124,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2107,
									"end": 2124,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2107,
									"end": 2124,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2107,
									"end": 2124,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2107,
									"end": 2124,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2107,
									"end": 2124,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2107,
									"end": 2124,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2107,
									"end": 2124,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2132,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1419,
									"end": 14348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1419,
									"end": 14348,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 4,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 4,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 4,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 4,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 4,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 4,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 4,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 4,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 4,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 4,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 4,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 4,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 4,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 4,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 4,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 4,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 4,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 4,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 4,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 4,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 4,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 4,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 4,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 4,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 4,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 4,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 4,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 4,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 4,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 4,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 4,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 4,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 4,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 4,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 4,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1419,
									"end": 14348,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1419,
									"end": 14348,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1419,
									"end": 14348,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1419,
									"end": 14348,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1419,
									"end": 14348,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1419,
									"end": 14348,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1419,
									"end": 14348,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1419,
									"end": 14348,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1419,
									"end": 14348,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208975dfc8bcd14b6bcd3d86055d232cd614710d49f21ef2478aef1fd9cb491d1164736f6c63430008100033",
									".code": [
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 14348,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2202,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2202,
											"end": 2302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3322,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3322,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3164,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3164,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3493,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3493,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3493,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2421,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2421,
											"end": 2525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2269,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2289,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2282,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2282,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2202,
											"end": 2302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3410,
											"end": 3422,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3403,
											"end": 3422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3240,
											"end": 3249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3240,
											"end": 3249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3611,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3612,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3587,
											"end": 3612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3587,
											"end": 3612,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3493,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2490,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2510,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2503,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2503,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1420,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1426,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1550,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1432,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1537,
											"end": 1542,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1519,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1519,
											"end": 1543,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1519,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1514,
											"end": 1517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1507,
											"end": 1544,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1432,
											"end": 1550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1676,
											"end": 1685,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1664,
											"end": 1690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1768,
											"end": 1769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1766,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1770,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1744,
											"end": 1750,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1700,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1700,
											"end": 1771,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1700,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1778,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1556,
											"end": 1778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1826,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1863,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1852,
											"end": 1857,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 1864,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1864,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1784,
											"end": 1870,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1784,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1975,
											"end": 1980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1959,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1981,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1959,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1947,
											"end": 1982,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1876,
											"end": 1988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2083,
											"end": 2087,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2121,
											"end": 2123,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2110,
											"end": 2119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2106,
											"end": 2124,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2124,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2124,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2174,
											"end": 2180,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 2134,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2134,
											"end": 2201,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2134,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2295,
											"end": 2412,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 2295,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2405,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2394,
											"end": 2406,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2578,
											"end": 2585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2660,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2611,
											"end": 2616,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2661,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2596,
											"end": 2661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2596,
											"end": 2661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2541,
											"end": 2667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2710,
											"end": 2717,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2757,
											"end": 2762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2739,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2739,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2673,
											"end": 2769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2897,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2775,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2866,
											"end": 2871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2848,
											"end": 2872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2848,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2846,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2838,
											"end": 2873,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2887,
											"end": 2888,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2885,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2828,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2775,
											"end": 2897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2949,
											"end": 2954,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2993,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2974,
											"end": 2994,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2994,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2994,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3030,
											"end": 3035,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 3003,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3003,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2903,
											"end": 3042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2903,
											"end": 3042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3107,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3156,
											"end": 3158,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3144,
											"end": 3153,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3135,
											"end": 3142,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3131,
											"end": 3154,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3127,
											"end": 3159,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3162,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3162,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3162,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3124,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3282,
											"end": 3283,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3307,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3352,
											"end": 3359,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3349,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3341,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 3307,
											"end": 3360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3360,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3307,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3360,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3297,
											"end": 3360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3253,
											"end": 3370,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3048,
											"end": 3377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3048,
											"end": 3377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3563,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3383,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3508,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3428,
											"end": 3429,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3509,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3525,
											"end": 3526,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3518,
											"end": 3533,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3556,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3557,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3889,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3569,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3619,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3650,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3644,
											"end": 3648,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3640,
											"end": 3652,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3652,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3630,
											"end": 3652,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3691,
											"end": 3695,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3687,
											"end": 3699,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3708,
											"end": 3789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3774,
											"end": 3778,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 3766,
											"end": 3772,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3762,
											"end": 3779,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3779,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3789,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3708,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3838,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3828,
											"end": 3834,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3839,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3823,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 3840,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3799,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3799,
											"end": 3883,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3855,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3855,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3799,
											"end": 3883,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3799,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3620,
											"end": 3889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3889,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3889,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"QvToken/Context.sol",
								"QvToken/ERC20.sol",
								"QvToken/IERC20.sol",
								"QvToken/IERC20Metadata.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mintAndburn\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintAndburn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"QvToken/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"QvToken/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"QvToken/ERC20.sol\":{\"keccak256\":\"0x11d93dd306b9501a7253367f9bb8aa4e9065f6fdadc666b3b91262206f12aaaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04b6f2e2b694b95359c5aa6099cc409706c3b405cca3ac54e006439d85bfe982\",\"dweb:/ipfs/QmbQgozzRiUBWRggxEFRD4XdWPHjHiZ5pG1nUThiVNMWpb\"]},\"QvToken/IERC20.sol\":{\"keccak256\":\"0xa8f3bd9674923d17ca6276aa5d043ccc7f98afff63f1000e252dee36d4b2c160\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10aff2af714a37372171ed0d22704760c3d41d95d29c9e84f2a3b9f706491d4f\",\"dweb:/ipfs/QmXFdyb7AngqoT6LU7Kz5sz4m3z7GpLdkbQ9wGn5gfFCyX\"]},\"QvToken/IERC20Metadata.sol\":{\"keccak256\":\"0x94dc88716e92464d240916e16167a8a900f88a2a954fb23cd2ac7f8f96d4d1b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad787a2de87b357623f979896b283138de1b491859c55c03ea19e5b3f85196fc\",\"dweb:/ipfs/QmRgyyXYMDTkwejZMpcDgmE3kgPQKkfvHGHDeunXCgTMJr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 37,
								"contract": "QvToken/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 39,
								"contract": "QvToken/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 41,
								"contract": "QvToken/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 43,
								"contract": "QvToken/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"QvToken/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "mintAndburn",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintAndburn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"mintAndburn(string,address,uint256)": {
								"details": "Returns the amount of tokens in existence."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mintAndburn\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintAndburn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"mintAndburn(string,address,uint256)\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"QvToken/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"QvToken/IERC20.sol\":{\"keccak256\":\"0xa8f3bd9674923d17ca6276aa5d043ccc7f98afff63f1000e252dee36d4b2c160\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10aff2af714a37372171ed0d22704760c3d41d95d29c9e84f2a3b9f706491d4f\",\"dweb:/ipfs/QmXFdyb7AngqoT6LU7Kz5sz4m3z7GpLdkbQ9wGn5gfFCyX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"QvToken/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "mintAndburn",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintAndburn",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mintAndburn\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintAndburn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"QvToken/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"QvToken/IERC20.sol\":{\"keccak256\":\"0xa8f3bd9674923d17ca6276aa5d043ccc7f98afff63f1000e252dee36d4b2c160\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10aff2af714a37372171ed0d22704760c3d41d95d29c9e84f2a3b9f706491d4f\",\"dweb:/ipfs/QmXFdyb7AngqoT6LU7Kz5sz4m3z7GpLdkbQ9wGn5gfFCyX\"]},\"QvToken/IERC20Metadata.sol\":{\"keccak256\":\"0x94dc88716e92464d240916e16167a8a900f88a2a954fb23cd2ac7f8f96d4d1b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad787a2de87b357623f979896b283138de1b491859c55c03ea19e5b3f85196fc\",\"dweb:/ipfs/QmRgyyXYMDTkwejZMpcDgmE3kgPQKkfvHGHDeunXCgTMJr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"QvToken/Context.sol": {
				"ast": {
					"absolutePath": "QvToken/Context.sol",
					"exportedSymbols": {
						"Context": [
							21
						]
					},
					"id": 22,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "116:505:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "641:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "718:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "736:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "740:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "736:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "729:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "709:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:0"
									},
									"scope": 21,
									"src": "656:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "829:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "847:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "851:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "847:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "840:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "771:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "779:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "813:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:16:0"
									},
									"scope": 21,
									"src": "762:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 22,
							"src": "623:243:0",
							"usedErrors": []
						}
					],
					"src": "89:779:0"
				},
				"id": 0
			},
			"QvToken/ERC20.sol": {
				"ast": {
					"absolutePath": "QvToken/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"ERC20": [
							199
						],
						"IERC20": [
							225
						],
						"IERC20Metadata": [
							250
						]
					},
					"id": 200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 23,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": "QvToken/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 24,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 200,
							"sourceUnit": 226,
							"src": "135:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "QvToken/IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 200,
							"sourceUnit": 251,
							"src": "159:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "QvToken/Context.sol",
							"file": "./Context.sol",
							"id": 26,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 200,
							"sourceUnit": 22,
							"src": "191:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 28,
										"name": "Context",
										"nameLocations": [
											"1437:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1437:7:1"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:7:1"
								},
								{
									"baseName": {
										"id": 30,
										"name": "IERC20",
										"nameLocations": [
											"1446:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "1446:6:1"
									},
									"id": 31,
									"nodeType": "InheritanceSpecifier",
									"src": "1446:6:1"
								},
								{
									"baseName": {
										"id": 32,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1454:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 250,
										"src": "1454:14:1"
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "1454:14:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 27,
								"nodeType": "StructuredDocumentation",
								"src": "218:1196:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 199,
							"linearizedBaseContracts": [
								199,
								250,
								225,
								21
							],
							"name": "ERC20",
							"nameLocation": "1428:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1512:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "1476:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 36,
										"keyType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1484:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1476:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 35,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1495:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1625:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "1609:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 38,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1609:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 41,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1661:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "1646:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 40,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1688:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 199,
									"src": "1673:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 42,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1673:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2072:60:1",
										"statements": [
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 51,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "2083:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 52,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "2091:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2083:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "2083:13:1"
											},
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 55,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 43,
														"src": "2107:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 56,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "2117:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2107:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "2107:17:1"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1704:306:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 60,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2042:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2028:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 45,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2063:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2049:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 47,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2049:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:44:1"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2072:0:1"
									},
									"scope": 199,
									"src": "2016:116:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										237
									],
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "2271:31:1",
										"statements": [
											{
												"expression": {
													"id": 67,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 41,
													"src": "2289:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 66,
												"id": 68,
												"nodeType": "Return",
												"src": "2282:12:1"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2140:56:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2211:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 63,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2238:8:1"
									},
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2215:2:1"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2256:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 64,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2256:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2255:15:1"
									},
									"scope": 199,
									"src": "2202:100:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										243
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2492:33:1",
										"statements": [
											{
												"expression": {
													"id": 77,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 43,
													"src": "2510:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 76,
												"id": 78,
												"nodeType": "Return",
												"src": "2503:14:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2310:105:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2430:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 73,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2459:8:1"
									},
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2436:2:1"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2477:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 74,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2477:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2476:15:1"
									},
									"scope": 199,
									"src": "2421:104:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										249
									],
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3229:28:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3247:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 86,
												"id": 88,
												"nodeType": "Return",
												"src": "3240:9:1"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2533:625:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3173:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3204:8:1"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3222:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 84,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3222:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3221:7:1"
									},
									"scope": 199,
									"src": "3164:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										216
									],
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "3392:38:1",
										"statements": [
											{
												"expression": {
													"id": 97,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 39,
													"src": "3410:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 96,
												"id": 98,
												"nodeType": "Return",
												"src": "3403:19:1"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3265:51:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3331:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 93,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3365:8:1"
									},
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3342:2:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "3383:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3383:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3382:9:1"
									},
									"scope": 199,
									"src": "3322:108:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										224
									],
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3576:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 109,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "3594:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 111,
													"indexExpression": {
														"id": 110,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "3604:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3594:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 108,
												"id": 112,
												"nodeType": "Return",
												"src": "3587:25:1"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "3438:49:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3502:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3549:8:1"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3520:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3512:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3512:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3511:17:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3567:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3567:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3566:9:1"
									},
									"scope": 199,
									"src": "3493:127:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "3695:338:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 122,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "3714:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3725:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 123,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3725:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3725:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3714:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3737:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3706:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3706:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "3706:65:1"
											},
											{
												"expression": {
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 131,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "3849:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 132,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "3865:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3849:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3849:22:1"
											},
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 135,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "3882:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 137,
														"indexExpression": {
															"id": 136,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "3892:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3882:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 138,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "3904:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3882:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "3882:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "6d696e74",
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3938:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daf0b3c5710379609eb5495f1ecd348cb28167711b73609fe565a72734550354",
																"typeString": "literal_string \"mint\""
															},
															"value": "mint"
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "3945:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 144,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3954:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_daf0b3c5710379609eb5495f1ecd348cb28167711b73609fe565a72734550354",
																"typeString": "literal_string \"mint\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 141,
														"name": "mintAndburn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "3926:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,address,uint256)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3926:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "EmitStatement",
												"src": "3921:40:1"
											}
										]
									},
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "3639:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3653:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "3645:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3670:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "3662:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3644:33:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3695:0:1"
									},
									"scope": 199,
									"src": "3630:403:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "4110:530:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 156,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "4129:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4140:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 157,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4140:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4140:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4129:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4152:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4121:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4121:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4121:67:1"
											},
											{
												"assignments": [
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "4274:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 197,
														"src": "4266:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4266:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 170,
												"initialValue": {
													"baseExpression": {
														"id": 167,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "4291:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 169,
													"indexExpression": {
														"id": 168,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "4301:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4291:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4266:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 172,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "4328:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 173,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "4346:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4328:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4354:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4320:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4320:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "4320:71:1"
											},
											{
												"id": 186,
												"nodeType": "UncheckedBlock",
												"src": "4402:81:1",
												"statements": [
													{
														"expression": {
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 178,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "4427:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 180,
																"indexExpression": {
																	"id": 179,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "4437:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "4427:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 181,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 166,
																	"src": "4448:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 182,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "4465:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4448:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4427:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 185,
														"nodeType": "ExpressionStatement",
														"src": "4427:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 187,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "4493:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 188,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "4509:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4493:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "4493:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "6275726e",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4545:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f43e8cfd4725c1e28fa4a6e3e468b4fcf75367166b850ac5f04e33ec843e82c1",
																"typeString": "literal_string \"burn\""
															},
															"value": "burn"
														},
														{
															"id": 193,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4552:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 194,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4561:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_f43e8cfd4725c1e28fa4a6e3e468b4fcf75367166b850ac5f04e33ec843e82c1",
																"typeString": "literal_string \"burn\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 191,
														"name": "mintAndburn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "4533:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (string memory,address,uint256)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4533:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "EmitStatement",
												"src": "4528:40:1"
											}
										]
									},
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "4054:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4068:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "4060:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4060:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4085:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "4077:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4077:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4059:33:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4110:0:1"
									},
									"scope": 199,
									"src": "4045:595:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 200,
							"src": "1419:12929:1",
							"usedErrors": []
						}
					],
					"src": "108:14242:1"
				},
				"id": 1
			},
			"QvToken/IERC20.sol": {
				"ast": {
					"absolutePath": "QvToken/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 202,
								"nodeType": "StructuredDocumentation",
								"src": "136:72:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "220:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "732:68:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"eventSelector": "abf5327be9f5825c40d58bda541dd07f09b62df3376bbd5ecdbaa8bd82a9d492",
									"id": 211,
									"name": "mintAndburn",
									"nameLocation": "812:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"indexed": false,
												"mutability": "mutable",
												"name": "mintAndburn",
												"nameLocation": "831:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "824:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 204,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "852:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "844:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "869:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "861:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "823:53:2"
									},
									"src": "806:71:2"
								},
								{
									"functionSelector": "18160ddd",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "898:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "909:2:2"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "935:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "934:9:2"
									},
									"scope": 225,
									"src": "889:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "952:74:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1041:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1059:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1051:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:17:2"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1091:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:9:2"
									},
									"scope": 225,
									"src": "1032:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "210:2750:2",
							"usedErrors": []
						}
					],
					"src": "109:2853:2"
				},
				"id": 2
			},
			"QvToken/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "QvToken/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						],
						"IERC20Metadata": [
							250
						]
					},
					"id": 251,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:3"
						},
						{
							"absolutePath": "QvToken/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 228,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 251,
							"sourceUnit": 226,
							"src": "140:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 230,
										"name": "IERC20",
										"nameLocations": [
											"316:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "316:6:3"
									},
									"id": 231,
									"nodeType": "InheritanceSpecifier",
									"src": "316:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 229,
								"nodeType": "StructuredDocumentation",
								"src": "166:120:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 250,
							"linearizedBaseContracts": [
								250,
								225
							],
							"name": "IERC20Metadata",
							"nameLocation": "298:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "330:56:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "401:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:3"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "431:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 234,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "431:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:15:3"
									},
									"scope": 250,
									"src": "392:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "454:58:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "527:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:2:3"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "559:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "559:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "558:15:3"
									},
									"scope": 250,
									"src": "518:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "582:67:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "664:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "672:2:3"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "698:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 246,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "698:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "697:7:3"
									},
									"scope": 250,
									"src": "655:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 251,
							"src": "288:420:3",
							"usedErrors": []
						}
					],
					"src": "113:597:3"
				},
				"id": 3
			}
		}
	}
}